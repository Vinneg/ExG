local L = LibStub('AceLocale-3.0'):NewLocale('ExG', 'enUS', true);

L['ExG'] = "Extended EPGP";
L['Roll Frame'] = 'Roll';
L['Inventory Frame'] = 'Inventory';
L['History Frame'] = function(page, total) return 'History. Page ' .. (page or 0) .. ' of ' .. (total or 0) .. '.' end;
L['Usage:'] = true;
L['to open Options frame'] = true;
L['to open Roster frame'] = true;
L['ExG General'] = 'General';
L['ExG BaseEP'] = 'Base EP';
L['ExG BaseGP'] = 'Base GP';
L['ExG History'] = 'History';
L['History Common'] = 'Common';
L['History page size'] = 'Page size';
L['History Exchange'] = true;
L['History source player'] = 'Source player';
L['History source offset'] = 'Offset (days)';
L['Exchange'] = true;
L['Clear'] = true;
L['ExG Open History'] = 'Open History';
L['ExG Import History'] = 'Import History';
L['Import'] = true;
L['ExG Buttons'] = "Buttons";
L['Button 1'] = true;
L['Button 2'] = true;
L['Button 3'] = true;
L['Button 4'] = true;
L['Button 5'] = true;
L['Button 6'] = 'Pass button';
L['Button Text'] = 'Text';
L['Button Ratio'] = 'Ratio';
L['Button Roll'] = 'Do roll';
L['Value must be a not empty string'] = true;
L['Value must be a number'] = true;
L['Value must be more than X'] = function(val) return 'Value must be more than ' .. (val or 0) end;
L['Player must be in guild'] = true;
L['Announce'] = true;
L['Refresh'] = true;
L['Date'] = '-';
L['Name'] = true;
L['Master'] = true;
L['Description'] = true;
L['EP'] = true;
L['GP'] = true;
L['History pull'] = function(data) return '|cff33ff99Pull history from ' .. (data.source or 'unknown') .. ' for last ' .. (data.offset or 0) .. ' days.|r'; end;
L['History imported'] = function(data) return '|cff33ff99Imported ' .. (data.count or 0) .. ' history entries. From ' .. date('%d/%m', data.min) .. ' to ' .. date('%d/%m', data.max) .. '.|r'; end;
L['Pretenders'] = function(roll, attend) return '|cff33ff99Pretenders ' .. (roll or 0) .. ' of ' .. (attend or 0) .. '|r'; end;
L['Total imported'] = function(count) return 'Total history record imported: ' .. (count or 0); end;
L['History EG'] = function(eg) if not eg then return '' end if (eg.before or 0) == (eg.after or 0) then return '' .. (eg.before or 0) else return '' .. (eg.before or 0) .. ' > ' .. (eg.after or 0) end end;
